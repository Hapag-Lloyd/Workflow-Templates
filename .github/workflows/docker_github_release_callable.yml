---
name: Build & Push Docker Image

# Only builds the image if a release was created.
# This guarantees the commit is tagged and on main branch.
# (see https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases)

# USE_WORKFLOW
# yamllint disable rule:comments
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      image-name:
        type: string
        required: true
        description: "Name of the image. Usually it is sensible to set this to the repository name"
      push:
        type: boolean
        required: false
        description: "Flag to enable the workflow to actually push the built image to the registry"
        default: false
      upload-security-scan-results:
        type: boolean
        required: false
        description: "Upload results of trivy scan of docker image to Github Security page"
        default: false
# /USE_WORKFLOW
# USE_REPOSITORY
## yamllint disable-line rule:truthy
#on: release
# /USE_REPOSITORY
# yamllint enable rule:comments

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      attestations: write
      id-token: write
    env:
      # Use GitHub Container Registry (ghcr.io) instead of Docker Hub
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}
    steps:
      - name: set lower case image name
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >> "${GITHUB_ENV}"
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Tags
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        id: meta
        with:
          images: ${{ env.IMAGE_NAME_LC }}
          tags: |
            type=ref,event=pr
            type=edge,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Build Image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_NAME_LC }}:trivy-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: ${{ env.IMAGE_NAME_LC }}:trivy-scan
          format: "sarif"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d # v3.30.0
        if: ${{ inputs.upload-security-scan-results }}
        with:
          sarif_file: "trivy-results.sarif"
      - name: Build and push image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
