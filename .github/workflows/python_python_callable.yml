---
name: Python build

# USE_WORKFLOW
# yamllint disable rule:comments
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      python-version:
        type: string
        required: true
        description: "The minimum Python version to support"
      python-versions:
        type: string
        required: true
        description: "The Python versions to test. Usually a list of newer versions we support."
# /USE_WORKFLOW
# USE_REPOSITORY
##
## Global variables from project settings:
##   PYTHON_VERSION: The minimum Python version to support.
##   PYTHON_VERSIONS: The Python versions to test. Usually a list of newer versions we support.
##
#
## yamllint disable-line rule:truthy
#on: pull_request
# /USE_REPOSITORY
# yamllint enable rule:comments

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"
          cache-dependency-path: setup.cfg

      - name: Install dependencies
        run: |
          python -m pip install -e "."

      - uses: astral-sh/ruff-action@9828f49eb4cadf267b40eaa330295c412c68c1f9 # v3.2.2
        name: Lint on ${{ inputs.python-version }}
        with:
          args: "check"
          # renovate: datasource=github-releases depName=astral-sh/ruff
          version: "0.8.6"

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: setup.cfg

      - name: Install dependencies
        run: |
          python -m pip install -e ".[test]"

      - name: Run docker-compose
        uses: hoverkraft-tech/compose-action@8be2d741e891ac9b8ac20825e6f3904149599925 # v2.2.0
        with:
          compose-file: "./tests/docker-compose.yml"

      - name: Test on ${{ matrix.python-version }}
        run: |
          pytest -v --doctest-modules --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
