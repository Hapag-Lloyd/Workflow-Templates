---
name: Publish Python 🐍 distribution 📦 to PyPI

# USE_WORKFLOW
# yamllint disable rule:comments
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      pypi-url:
        type: string
        required: true
        description: "The URL of the PyPI project, e.g. https://pypi.org/p/my-fancy-package"
      python-version:
        type: string
        required: true
        description: "The minimum Python version to support"
# /USE_WORKFLOW
# USE_REPOSITORY
##
## Global variables from project settings:
##   PYPI_URL: The URL of the PyPI project, e.g. https://pypi.org/p/my-fancy-package
##   PYTHON_VERSION: The minimum Python version to support.
##
#
## yamllint disable-line rule:truthy
#on:
#  release:
#    types: [published]
# /USE_REPOSITORY
# yamllint enable rule:comments

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Set version number
        run: |
          version="${GITHUB_REF#refs/tags\/}"
          echo "Setting version in setup.cfg to ${version}"
          sed -i "s/^version = .*/version = ${version}/" setup.cfg
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"
          cache-dependency-path: setup.cfg
      - name: Install pypa/build
        run: >-
          python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: ${{ inputs.pypi-url }}
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
